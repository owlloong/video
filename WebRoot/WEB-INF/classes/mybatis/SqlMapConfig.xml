<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

	<!-- 加载属性文件，
	如果和spring整合则可以去掉 -->
	<!-- <properties resource="db.properties">
		properties中还可以配置一些属性名和属性值
		<property name="jdbc.driver" value=""/>
	</properties> -->
	<!-- 全局配置参数，需要时再设置 -->
	<settings> 
		<!-- 打开延迟加载的开关 -->
		<setting name="lazyLoadingEnabled" value="true"/>
		<!-- 将积极加载改为按需加载 -->
		<setting name="aggressiveLazyLoading" value="false"/>
		<!-- 开启二级缓存 -->
		<setting name="cacheEnabled" value="true"/>
	</settings>

	<!-- 别名定义 -->
	<typeAliases>

		<!-- 针对单个别名定义 type：类型的路径 alias：别名 -->
		<!-- <typeAlias type="com.po.UUser" alias="user"/> -->
		<!-- 批量别名定义 指定包名，mybatis自动扫描包中的po类，自动定义别名，别名就是类名（首字母大写或小写都可以） -->
		<package name="com.po" />

	</typeAliases>

	<!-- 和spring整合后 environments配置将废除 -->
<!-- 	<environments default="development">
		<environment id="development">
			使用jdbc事务管理，事务控制由mybatis
			<transactionManager type="JDBC" />
			数据库连接池，由mybatis管理
			<dataSource type="POOLED">
				<property name="driver" value="${jdbc.driver}" />
				<property name="url" value="${jdbc.url}" />
				<property name="username" value="${jdbc.username}" />
				<property name="password" value="${jdbc.password}" />
			</dataSource>
		</environment>
	</environments> -->
	
	<!-- <mappers>
		<mapper resource="com/mapper/UserMapper.xml" />
		如果整合spring的话，创建bean使用扫描，则这里不需要扫描
		<package name="com.mapper"/>
	</mappers> -->
	


</configuration>
